# -*- coding: utf-8 -*-
"""Untitled9.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1IH3n49n4h9mxWeN2P9gAI_O8c6Hg01m3
"""

import gdown
import pandas as pd
import statsmodels.api as sm
import matplotlib.pyplot as plt

# Extract the file ID from the Google Drive link
url = "https://docs.google.com/spreadsheets/d/18Qr23SUFtJ-jBPw76v_YkE0CgAI8Df0U/edit?usp=sharing"
file_id = url.split("/")[5]

# Construct the gdown URL and download the file
gdown_url = f"https://drive.google.com/uc?export=download&id={file_id}"
gdown.download(gdown_url, 'datapower_demand_dataset.xlsx', quiet=False)

# Read the downloaded xlsx file into a pandas dataframe
data = pd.read_excel('datapower_demand_dataset.xlsx')

# Display the first few rows of the dataframe
# print(data.head())

# "TS" 열을 인덱스로 설정
data.set_index('TS', inplace=True)

# "Value" 열의 값을 출력
# print(data['Value'])

# 지정된 열들을 삭제
columns_to_drop = ['Unnamed: 0.1', 'Unnamed: 0', 'Time', 'Max Value', 'Date']
data.drop(columns=columns_to_drop, inplace=True)

# 결과를 확인하기 위해 데이터프레임의 처음 몇 행을 출력
# print(data.head())

# 일별로 "Value" 열 값을 합계
daily_sum = data['Value'].resample('D').sum()

# 결과 출력
# print(daily_sum)

# ETS 분석 수행
result = sm.tsa.seasonal_decompose(daily_sum, model='additive')

# 결과 시각화
fig = result.plot()

# 그래프를 result.png로 저장
fig.savefig('result.png')